type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ClosePosition @entity(immutable: true) {
  id: Bytes!
  key: Bytes! # bytes32
  realisedPnl: BigInt! # int256
  markPrice: BigInt! # uint256
  feeUsd: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DecreasePosition @entity(immutable: true) {
  id: Bytes!
  key: Bytes! # bytes32
  account: Bytes! # address
  indexToken: Bytes! # address
  isLong: Boolean! # bool
  posId: BigInt! # uint256
  realisedPnl: BigInt! # int256
  posData: [BigInt!] # uint256[7]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IncreasePosition @entity(immutable: true) {
  id: Bytes!
  key: Bytes! # bytes32
  account: Bytes! # address
  indexToken: Bytes! # address
  isLong: Boolean! # bool
  posId: BigInt! # uint256
  posData: [BigInt!] # uint256[7]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LiquidatePosition @entity(immutable: true) {
  id: Bytes!
  key: Bytes! # bytes32
  realisedPnl: BigInt! # int256
  markPrice: BigInt! # uint256
  feeUsd: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserStat @entity {
  id: ID!
  balance: BigInt! # uint256
  tradeVolume: BigInt! # uint256
}