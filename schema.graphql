type Transfer @entity(immutable: true) {
  id: ID!
  from: String!
  to: String!
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
}

type ClosePosition @entity(immutable: true) {
  id: ID!
  key: String!
  account: String!
  indexToken: String!
  isLong: Boolean! # bool
  posId: Int!
  realisedPnl: BigInt! # int256
  markPrice: BigInt! # uint256
  feeUsd: BigInt! # uint256
  timestamp: Int!
  transactionHash: String!
}

type DecreasePosition @entity(immutable: true) {
  id: ID!
  key: String!
  account: String!
  indexToken: String!
  isLong: Boolean! # bool
  posId: Int!
  averagePrice: BigInt! # uint256
  entryFundingRate: BigInt! # uint256
  reserveAmount: BigInt! # uint256
  collateral: BigInt! # uint256
  markPrice: BigInt! # uint256
  size: BigInt! # uint256
  feeUsd: BigInt! # uint256
  realisedPnl: BigInt! # int256
  timestamp: Int!
  transactionHash: String!
}

type IncreasePosition @entity(immutable: true) {
  id: ID!
  key: String!
  account: String!
  indexToken: String!
  isLong: Boolean! # bool
  posId: Int!
  averagePrice: BigInt! # uint256
  entryFundingRate: BigInt! # uint256
  reserveAmount: BigInt! # uint256
  collateral: BigInt! # uint256
  markPrice: BigInt! # uint256
  size: BigInt! # uint256
  feeUsd: BigInt! # uint256
  timestamp: Int!
  transactionHash: String!
}

type LiquidatePosition @entity(immutable: true) {
  id: ID!
  key: String!
  account: String!
  indexToken: String!
  isLong: Boolean! # bool
  posId: Int!
  realisedPnl: BigInt! # int256
  markPrice: BigInt! # uint256
  feeUsd: BigInt! # uint256
  timestamp: Int!
  transactionHash: String!
}